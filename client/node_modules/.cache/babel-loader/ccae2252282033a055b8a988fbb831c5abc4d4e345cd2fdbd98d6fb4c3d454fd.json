{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar TrackPublication = require('./trackpublication');\n/**\n * A {@link RemoteTrackPublication} represents a {@link RemoteTrack} that has\n * been published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isSubscribed - whether the published {@link RemoteTrack}\n *   is subscribed to\n * @property {boolean} isTrackEnabled - whether the published\n *   {@link RemoteTrack} is enabled\n * @property {Track.Kind} kind - kind of the published {@link RemoteTrack}\n * @property {Track.Priority} publishPriority - the {@link Track.Priority} of the published\n *   {@link RemoteTrack} set by the {@link RemoteParticipant}\n * @property {?RemoteTrack} track - Unless you have subscribed to the\n *   {@link RemoteTrack}, this property is null\n * @emits RemoteTrackPublication#publishPriorityChanged\n * @emits RemoteTrackPublication#subscribed\n * @emits RemoteTrackPublication#subscriptionFailed\n * @emits RemoteTrackPublication#trackDisabled\n * @emits RemoteTrackPublication#trackEnabled\n * @emits RemoteTrackPublication#trackSwitchedOff\n * @emits RemoteTrackPublication#trackSwitchedOn\n * @emits RemoteTrackPublication#unsubscribed\n *\n */\nvar RemoteTrackPublication = /** @class */function (_super) {\n  __extends(RemoteTrackPublication, _super);\n  /**\n   * Construct a {@link RemoteTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n  function RemoteTrackPublication(signaling, options) {\n    var _this = _super.call(this, signaling.name, signaling.sid, options) || this;\n    Object.defineProperties(_this, {\n      _signaling: {\n        value: signaling\n      },\n      _track: {\n        value: null,\n        writable: true\n      },\n      isSubscribed: {\n        enumerable: true,\n        get: function () {\n          return !!this._track;\n        }\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get: function () {\n          return signaling.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: signaling.kind\n      },\n      publishPriority: {\n        enumerable: true,\n        get: function () {\n          return signaling.priority;\n        }\n      },\n      track: {\n        enumerable: true,\n        get: function () {\n          return this._track;\n        }\n      }\n    });\n    // remember original state, and fire events only on change.\n    var error = signaling.error,\n      isEnabled = signaling.isEnabled,\n      isSwitchedOff = signaling.isSwitchedOff,\n      priority = signaling.priority;\n    signaling.on('updated', function () {\n      if (error !== signaling.error) {\n        error = signaling.error;\n        _this.emit('subscriptionFailed', signaling.error);\n        return;\n      }\n      if (isEnabled !== signaling.isEnabled) {\n        isEnabled = signaling.isEnabled;\n        if (_this.track) {\n          _this.track._setEnabled(signaling.isEnabled);\n        }\n        _this.emit(signaling.isEnabled ? 'trackEnabled' : 'trackDisabled');\n      }\n      if (isSwitchedOff !== signaling.isSwitchedOff) {\n        _this._log.debug(_this.trackSid + \": \" + (isSwitchedOff ? 'OFF' : 'ON') + \" => \" + (signaling.isSwitchedOff ? 'OFF' : 'ON'));\n        isSwitchedOff = signaling.isSwitchedOff;\n        if (_this.track) {\n          _this.track._setSwitchedOff(signaling.isSwitchedOff);\n          _this.emit(isSwitchedOff ? 'trackSwitchedOff' : 'trackSwitchedOn', _this.track);\n        } else if (isSwitchedOff) {\n          _this._log.warn('Track was not subscribed when switched Off.');\n        }\n      }\n      if (priority !== signaling.priority) {\n        priority = signaling.priority;\n        _this.emit('publishPriorityChanged', priority);\n      }\n    });\n    return _this;\n  }\n  RemoteTrackPublication.prototype.toString = function () {\n    return \"[RemoteTrackPublication #\" + this._instanceId + \": \" + this.trackSid + \"]\";\n  };\n  /**\n   * @private\n   * @param {RemoteTrack} track\n   */\n  RemoteTrackPublication.prototype._subscribed = function (track) {\n    if (!this._track && track) {\n      this._track = track;\n      this.emit('subscribed', track);\n    }\n  };\n  /**\n   * @private\n   */\n  RemoteTrackPublication.prototype._unsubscribe = function () {\n    if (this._track) {\n      var track = this._track;\n      this._track = null;\n      this.emit('unsubscribed', track);\n    }\n  };\n  return RemoteTrackPublication;\n}(TrackPublication);\n/**\n * The {@link RemoteTrack}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority}; RemoteTrackPublication#publishPriority is also\n *   updated accordingly\n * @event RemoteTrackPublication#publishPriorityChanged\n */\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was subscribed to\n * @event RemoteTrackPublication#subscribed\n */\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @event RemoteTrackPublication#subscriptionFailed\n */\n/**\n * The {@link RemoteTrack} was disabled.\n * @event RemoteTrackPublication#trackDisabled\n */\n/**\n * The {@link RemoteTrack} was enabled.\n * @event RemoteTrackPublication#trackEnabled\n */\n/**\n * The {@link RemoteTrack} was switched off.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched off\n * @event RemoteTrackPublication#trackSwitchedOff\n */\n/**\n * The {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched on\n * @event RemoteTrackPublication#trackSwitchedOn\n */\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteTrackPublication#unsubscribed\n */\n/**\n * {@link RemoteTrackPublication} options\n * @typedef {object} RemoteTrackPublicationOptions\n * @property {LogLevel|LogLevels} logLevel - Log level for 'media' modules\n */\nmodule.exports = RemoteTrackPublication;","map":{"version":3,"mappings":"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","names":["TrackPublication","require","__extends","signaling","options","_super","name","sid","Object","defineProperties","_this","_signaling","value","_track","writable","isSubscribed","enumerable","get","isTrackEnabled","isEnabled","kind","publishPriority","priority","track","isSwitchedOff","on","error","emit","_setEnabled","_log","debug","trackSid","_setSwitchedOff","warn","RemoteTrackPublication","_instanceId","module","exports"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/media/track/remotetrackpublication.js"],"sourcesContent":["'use strict';\n\nconst TrackPublication = require('./trackpublication');\n\n/**\n * A {@link RemoteTrackPublication} represents a {@link RemoteTrack} that has\n * been published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isSubscribed - whether the published {@link RemoteTrack}\n *   is subscribed to\n * @property {boolean} isTrackEnabled - whether the published\n *   {@link RemoteTrack} is enabled\n * @property {Track.Kind} kind - kind of the published {@link RemoteTrack}\n * @property {Track.Priority} publishPriority - the {@link Track.Priority} of the published\n *   {@link RemoteTrack} set by the {@link RemoteParticipant}\n * @property {?RemoteTrack} track - Unless you have subscribed to the\n *   {@link RemoteTrack}, this property is null\n * @emits RemoteTrackPublication#publishPriorityChanged\n * @emits RemoteTrackPublication#subscribed\n * @emits RemoteTrackPublication#subscriptionFailed\n * @emits RemoteTrackPublication#trackDisabled\n * @emits RemoteTrackPublication#trackEnabled\n * @emits RemoteTrackPublication#trackSwitchedOff\n * @emits RemoteTrackPublication#trackSwitchedOn\n * @emits RemoteTrackPublication#unsubscribed\n *\n */\nclass RemoteTrackPublication extends TrackPublication {\n  /**\n   * Construct a {@link RemoteTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n  constructor(signaling, options) {\n    super(signaling.name, signaling.sid, options);\n\n    Object.defineProperties(this, {\n      _signaling: {\n        value: signaling\n      },\n      _track: {\n        value: null,\n        writable: true\n      },\n      isSubscribed: {\n        enumerable: true,\n        get() {\n          return !!this._track;\n        }\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get() {\n          return signaling.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: signaling.kind\n      },\n      publishPriority: {\n        enumerable: true,\n        get() {\n          return signaling.priority;\n        }\n      },\n      track: {\n        enumerable: true,\n        get() {\n          return this._track;\n        }\n      }\n    });\n\n    // remember original state, and fire events only on change.\n    let {\n      error,\n      isEnabled,\n      isSwitchedOff,\n      priority\n    } = signaling;\n\n    signaling.on('updated', () => {\n      if (error !== signaling.error) {\n        error = signaling.error;\n        this.emit('subscriptionFailed', signaling.error);\n        return;\n      }\n      if (isEnabled !== signaling.isEnabled) {\n        isEnabled = signaling.isEnabled;\n        if (this.track) {\n          this.track._setEnabled(signaling.isEnabled);\n        }\n        this.emit(signaling.isEnabled ? 'trackEnabled' : 'trackDisabled');\n      }\n      if (isSwitchedOff !== signaling.isSwitchedOff) {\n        this._log.debug(`${this.trackSid}: ${isSwitchedOff ? 'OFF' : 'ON'} => ${signaling.isSwitchedOff ? 'OFF' : 'ON'}`);\n        isSwitchedOff = signaling.isSwitchedOff;\n        if (this.track) {\n          this.track._setSwitchedOff(signaling.isSwitchedOff);\n          this.emit(isSwitchedOff ? 'trackSwitchedOff' : 'trackSwitchedOn',  this.track);\n        } else if (isSwitchedOff) {\n          this._log.warn('Track was not subscribed when switched Off.');\n        }\n      }\n      if (priority !== signaling.priority) {\n        priority = signaling.priority;\n        this.emit('publishPriorityChanged', priority);\n      }\n    });\n  }\n\n  toString() {\n    return `[RemoteTrackPublication #${this._instanceId}: ${this.trackSid}]`;\n  }\n\n  /**\n   * @private\n   * @param {RemoteTrack} track\n   */\n  _subscribed(track) {\n    if (!this._track && track) {\n      this._track = track;\n      this.emit('subscribed', track);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _unsubscribe() {\n    if (this._track) {\n      const track = this._track;\n      this._track = null;\n      this.emit('unsubscribed', track);\n    }\n  }\n}\n\n/**\n * The {@link RemoteTrack}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority}; RemoteTrackPublication#publishPriority is also\n *   updated accordingly\n * @event RemoteTrackPublication#publishPriorityChanged\n */\n\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was subscribed to\n * @event RemoteTrackPublication#subscribed\n */\n\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @event RemoteTrackPublication#subscriptionFailed\n */\n\n/**\n * The {@link RemoteTrack} was disabled.\n * @event RemoteTrackPublication#trackDisabled\n */\n\n/**\n * The {@link RemoteTrack} was enabled.\n * @event RemoteTrackPublication#trackEnabled\n */\n\n/**\n * The {@link RemoteTrack} was switched off.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched off\n * @event RemoteTrackPublication#trackSwitchedOff\n */\n\n/**\n * The {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched on\n * @event RemoteTrackPublication#trackSwitchedOn\n */\n\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteTrackPublication#unsubscribed\n */\n\n/**\n * {@link RemoteTrackPublication} options\n * @typedef {object} RemoteTrackPublicationOptions\n * @property {LogLevel|LogLevels} logLevel - Log level for 'media' modules\n */\n\nmodule.exports = RemoteTrackPublication;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}