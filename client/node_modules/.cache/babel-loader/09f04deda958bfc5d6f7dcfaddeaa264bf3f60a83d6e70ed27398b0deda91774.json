{"ast":null,"code":"'use strict';\n\nmodule.exports = function (scope) {\n  var location = scope.location,\n    URL = scope.URL;\n  if ([location, URL].some(function (api) {\n    return !api;\n  })) {\n    return function dynamicImportNotSupported(module) {\n      return Promise.reject(new Error(\"Failed to import: \" + module + \": dynamicImport is not supported\"));\n    };\n  }\n  scope.__twilioVideoImportedModules = {\n    // Imported module map.\n  };\n  return function dynamicImport(module) {\n    if (module in scope.__twilioVideoImportedModules) {\n      return Promise.resolve(scope.__twilioVideoImportedModules[module]);\n    }\n    // NOTE(mmalavalli): Calling import() directly can cause build issues in TypeScript and Webpack\n    // (and probably other frameworks). So, we create a Function that calls import() in its body.\n    // eslint-disable-next-line no-new-func\n    return new Function('scope', \"return import('\" + new URL(module, location) + \"').then(m => scope.__twilioVideoImportedModules['\" + module + \"'] = m);\")(scope);\n  };\n}(globalThis);","map":{"version":3,"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAI,UAASC,KAAK;EACtB,YAAQ,GAAUA,KAAK,SAAf;IAAEC,GAAG,GAAKD,KAAK,IAAV;EACrB,IAAI,CAACE,QAAQ,EAAED,GAAG,CAAC,CAACE,IAAI,CAAC,aAAG;IAAI,QAACC,GAAG;EAAJ,CAAI,CAAC,EAAE;IACrC,OAAO,SAASC,yBAAyB,CAACP,MAAM;MAC9C,OAAOQ,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,uBAAqBV,MAAM,qCAAkC,CAAC,CAAC;IACjG,CAAC;;EAEHE,KAAK,CAACS,4BAA4B,GAAG;IACnC;EAAA,CACD;EACD,OAAO,SAASC,aAAa,CAACZ,MAAM;IAClC,IAAIA,MAAM,IAAIE,KAAK,CAACS,4BAA4B,EAAE;MAChD,OAAOH,OAAO,CAACK,OAAO,CAACX,KAAK,CAACS,4BAA4B,CAACX,MAAM,CAAC,CAAC;;IAEpE;IACA;IACA;IACA,OAAO,IAAIc,QAAQ,CAAC,OAAO,EAAE,oBAAkB,IAAIX,GAAG,CAACH,MAAM,EAAEI,QAAQ,CAAC,yDAAoDJ,MAAM,aAAU,CAAC,CAACE,KAAK,CAAC;EACtJ,CAAC;AACH,CAAC,CAACa,UAAU,CAAE","names":["module","exports","scope","URL","location","some","api","dynamicImportNotSupported","Promise","reject","Error","__twilioVideoImportedModules","dynamicImport","resolve","Function","globalThis"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/util/dynamicimport.js"],"sourcesContent":["'use strict';\n\nmodule.exports = (function(scope) {\n  const { location, URL } = scope;\n  if ([location, URL].some(api => !api)) {\n    return function dynamicImportNotSupported(module) {\n      return Promise.reject(new Error(`Failed to import: ${module}: dynamicImport is not supported`));\n    };\n  }\n  scope.__twilioVideoImportedModules = {\n    // Imported module map.\n  };\n  return function dynamicImport(module) {\n    if (module in scope.__twilioVideoImportedModules) {\n      return Promise.resolve(scope.__twilioVideoImportedModules[module]);\n    }\n    // NOTE(mmalavalli): Calling import() directly can cause build issues in TypeScript and Webpack\n    // (and probably other frameworks). So, we create a Function that calls import() in its body.\n    // eslint-disable-next-line no-new-func\n    return new Function('scope', `return import('${new URL(module, location)}').then(m => scope.__twilioVideoImportedModules['${module}'] = m);`)(scope);\n  };\n}(globalThis));\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}