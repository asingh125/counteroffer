{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar RemoteParticipantSignaling = require('../remoteparticipant');\nvar RemoteTrackPublicationV2 = require('./remotetrackpublication');\n/**\n * @extends RemoteParticipantSignaling\n * @property {?number} revision\n */\nvar RemoteParticipantV2 = /** @class */function (_super) {\n  __extends(RemoteParticipantV2, _super);\n  /**\n   * Construct a {@link RemoteParticipantV2}.\n   * @param {object} participantState\n   * @param {function(Track.SID): boolean} getInitialTrackSwitchOffState\n   * @param {function(Track.SID, Track.Priority): boolean} setPriority\n   * @param {function(Track.SID, ClientRenderHint): Promise<void>} setRenderHint\n   * @param {function(Track.SID): void} clearTrackHint\n   * @param {object} [options]\n   */\n  function RemoteParticipantV2(participantState, getInitialTrackSwitchOffState, setPriority, setRenderHint, clearTrackHint, options) {\n    var _this = _super.call(this, participantState.sid, participantState.identity) || this;\n    options = Object.assign({\n      RemoteTrackPublicationV2: RemoteTrackPublicationV2\n    }, options);\n    Object.defineProperties(_this, {\n      _revision: {\n        writable: true,\n        value: null\n      },\n      _RemoteTrackPublicationV2: {\n        value: options.RemoteTrackPublicationV2\n      },\n      _getInitialTrackSwitchOffState: {\n        value: getInitialTrackSwitchOffState\n      },\n      updateSubscriberTrackPriority: {\n        value: function (trackSid, priority) {\n          return setPriority(trackSid, priority);\n        }\n      },\n      updateTrackRenderHint: {\n        value: function (trackSid, renderHint) {\n          return setRenderHint(trackSid, renderHint);\n        }\n      },\n      clearTrackHint: {\n        value: function (trackSid) {\n          return clearTrackHint(trackSid);\n        }\n      },\n      revision: {\n        enumerable: true,\n        get: function () {\n          return this._revision;\n        }\n      }\n    });\n    return _this.update(participantState);\n  }\n  /**\n   * @private\n   */\n  RemoteParticipantV2.prototype._getOrCreateTrack = function (trackState) {\n    var RemoteTrackPublicationV2 = this._RemoteTrackPublicationV2;\n    var track = this.tracks.get(trackState.sid);\n    if (!track) {\n      var isSwitchedOff = this._getInitialTrackSwitchOffState(trackState.sid);\n      track = new RemoteTrackPublicationV2(trackState, isSwitchedOff);\n      this.addTrack(track);\n    }\n    return track;\n  };\n  /**\n   * Update the {@link RemoteParticipantV2} with the new state.\n   * @param {object} participantState\n   * @returns {this}\n   */\n  RemoteParticipantV2.prototype.update = function (participantState) {\n    var _this = this;\n    if (this.revision !== null && participantState.revision <= this.revision) {\n      return this;\n    }\n    this._revision = participantState.revision;\n    var tracksToKeep = new Set();\n    participantState.tracks.forEach(function (trackState) {\n      var track = _this._getOrCreateTrack(trackState);\n      track.update(trackState);\n      tracksToKeep.add(track);\n    });\n    this.tracks.forEach(function (track) {\n      if (!tracksToKeep.has(track)) {\n        _this.removeTrack(track);\n      }\n    });\n    switch (participantState.state) {\n      case 'disconnected':\n        this.disconnect();\n        break;\n      case 'reconnecting':\n        this.reconnecting();\n        break;\n      case 'connected':\n        this.connect(this.sid, this.identity);\n        break;\n    }\n    return this;\n  };\n  return RemoteParticipantV2;\n}(RemoteParticipantSignaling);\nmodule.exports = RemoteParticipantV2;","map":{"version":3,"mappings":"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","names":["RemoteParticipantSignaling","require","RemoteTrackPublicationV2","__extends","participantState","getInitialTrackSwitchOffState","setPriority","setRenderHint","clearTrackHint","options","_super","sid","identity","Object","assign","defineProperties","_this","_revision","writable","value","_RemoteTrackPublicationV2","_getInitialTrackSwitchOffState","updateSubscriberTrackPriority","trackSid","priority","updateTrackRenderHint","renderHint","revision","enumerable","get","update","RemoteParticipantV2","trackState","track","tracks","isSwitchedOff","addTrack","tracksToKeep","Set","forEach","_getOrCreateTrack","add","has","removeTrack","state","disconnect","reconnecting","connect","module","exports"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/signaling/v2/remoteparticipant.js"],"sourcesContent":["'use strict';\n\nconst RemoteParticipantSignaling = require('../remoteparticipant');\nconst RemoteTrackPublicationV2 = require('./remotetrackpublication');\n\n/**\n * @extends RemoteParticipantSignaling\n * @property {?number} revision\n */\nclass RemoteParticipantV2 extends RemoteParticipantSignaling {\n  /**\n   * Construct a {@link RemoteParticipantV2}.\n   * @param {object} participantState\n   * @param {function(Track.SID): boolean} getInitialTrackSwitchOffState\n   * @param {function(Track.SID, Track.Priority): boolean} setPriority\n   * @param {function(Track.SID, ClientRenderHint): Promise<void>} setRenderHint\n   * @param {function(Track.SID): void} clearTrackHint\n   * @param {object} [options]\n   */\n  constructor(participantState, getInitialTrackSwitchOffState, setPriority, setRenderHint, clearTrackHint, options) {\n    super(participantState.sid, participantState.identity);\n\n    options = Object.assign({\n      RemoteTrackPublicationV2\n    }, options);\n\n    Object.defineProperties(this, {\n      _revision: {\n        writable: true,\n        value: null\n      },\n      _RemoteTrackPublicationV2: {\n        value: options.RemoteTrackPublicationV2\n      },\n      _getInitialTrackSwitchOffState: {\n        value: getInitialTrackSwitchOffState\n      },\n      updateSubscriberTrackPriority: {\n        value: (trackSid, priority) => setPriority(trackSid, priority)\n      },\n      updateTrackRenderHint: {\n        value: (trackSid, renderHint) => setRenderHint(trackSid, renderHint)\n      },\n      clearTrackHint: {\n        value: trackSid => clearTrackHint(trackSid)\n      },\n      revision: {\n        enumerable: true,\n        get() {\n          return this._revision;\n        }\n      }\n    });\n\n    return this.update(participantState);\n  }\n\n  /**\n   * @private\n   */\n  _getOrCreateTrack(trackState) {\n    const RemoteTrackPublicationV2 = this._RemoteTrackPublicationV2;\n    let track = this.tracks.get(trackState.sid);\n    if (!track) {\n      const isSwitchedOff = this._getInitialTrackSwitchOffState(trackState.sid);\n      track = new RemoteTrackPublicationV2(trackState, isSwitchedOff);\n      this.addTrack(track);\n    }\n    return track;\n  }\n\n  /**\n   * Update the {@link RemoteParticipantV2} with the new state.\n   * @param {object} participantState\n   * @returns {this}\n   */\n  update(participantState) {\n    if (this.revision !== null && participantState.revision <= this.revision) {\n      return this;\n    }\n    this._revision = participantState.revision;\n\n    const tracksToKeep = new Set();\n\n    participantState.tracks.forEach(trackState => {\n      const track = this._getOrCreateTrack(trackState);\n      track.update(trackState);\n      tracksToKeep.add(track);\n    });\n\n    this.tracks.forEach(track => {\n      if (!tracksToKeep.has(track)) {\n        this.removeTrack(track);\n      }\n    });\n\n    switch (participantState.state) {\n      case 'disconnected':\n        this.disconnect();\n        break;\n      case 'reconnecting':\n        this.reconnecting();\n        break;\n      case 'connected':\n        this.connect(this.sid, this.identity);\n        break;\n    }\n\n    return this;\n  }\n}\n\nmodule.exports = RemoteParticipantV2;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}