{"ast":null,"code":"var _jsxFileName = \"/Users/aarushisingh/Projects/counteroffer/client/src/components/Participant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Participant = _ref => {\n  _s();\n  let {\n    participant\n  } = _ref;\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const videoRef = useRef();\n  const audioRef = useRef();\n  const trackpubsToTracks = trackMap => Array.from(trackMap.values()).map(publication => publication.track).filter(track => track !== null);\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: participant.identity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      style: {\n        width: \"100%\"\n      },\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Participant, \"mkU8c/5Desq4gBVgG4t6VGqYbcQ=\");\n_c = Participant;\nexport default Participant;\nvar _c;\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Participant","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","videoTrack","attach","current","detach","audioTrack","identity","width"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/src/components/Participant.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  return (\n    <div className=\"participant\">\n      <h4>{participant.identity}</h4>\n      <video style={{width:\"100%\"}} ref={videoRef} autoPlay={true} />\n      <audio ref={audioRef} autoPlay={true} muted={true} />\n    </div>\n  );\n};\n\nexport default Participant;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}