{"ast":null,"code":"'use strict';\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar createlocaltracks_1 = require(\"./createlocaltracks\");\nvar preflighttest_1 = require(\"./preflight/preflighttest\");\nvar internals = {\n  connect: require('./connect'),\n  createLocalAudioTrack: require('./createlocaltrack').audio,\n  createLocalVideoTrack: require('./createlocaltrack').video,\n  isSupported: require('./util/support')(),\n  version: require('../package.json').version,\n  Logger: require('./vendor/loglevel'),\n  LocalAudioTrack: require('./media/track/es5').LocalAudioTrack,\n  LocalDataTrack: require('./media/track/es5').LocalDataTrack,\n  LocalVideoTrack: require('./media/track/es5').LocalVideoTrack\n};\nfunction connect(token, options) {\n  var internalOptions = __assign({\n    createLocalTracks: createlocaltracks_1.createLocalTracks\n  }, options);\n  return internals.connect(token, internalOptions);\n}\nfunction createLocalAudioTrack(options) {\n  var internalOptions = __assign({\n    createLocalTracks: createlocaltracks_1.createLocalTracks\n  }, options);\n  return internals.createLocalAudioTrack(internalOptions);\n}\nfunction createLocalVideoTrack(options) {\n  var internalOptions = __assign({\n    createLocalTracks: createlocaltracks_1.createLocalTracks\n  }, options);\n  return internals.createLocalVideoTrack(internalOptions);\n}\n/**\n * @module twilio-video\n * @property {boolean} isSupported - true if the current browser is officially\n *   supported by twilio-video.js; In this context, \"supported\" means that\n *   twilio-video.js has been extensively tested with this browser; This\n *   <a href=\"https://www.twilio.com/docs/video/javascript#supported-browsers\" target=\"_blank\">table</a>\n *   specifies the list of officially supported browsers.\n *\n * @property {object} Logger - The <a href=\"https://www.npmjs.com/package/loglevel\" target=\"_blank\">loglevel</a>\n *    module used by the SDK. Use this object to access the internal loggers and perform actions as defined by the\n *   <a href=\"https://www.npmjs.com/package/loglevel\" target=\"_blank\">loglevel</a> APIs.\n *   See [connect](#.connect) for examples.\n *\n * @property {string} version - current version of twilio-video.js.\n */\nvar isSupported = internals.isSupported;\nvar version = internals.version;\nvar Logger = internals.Logger;\nvar LocalAudioTrack = internals.LocalAudioTrack;\nvar LocalVideoTrack = internals.LocalVideoTrack;\nvar LocalDataTrack = internals.LocalDataTrack;\nmodule.exports = {\n  connect: connect,\n  createLocalAudioTrack: createLocalAudioTrack,\n  createLocalVideoTrack: createLocalVideoTrack,\n  createLocalTracks: createlocaltracks_1.createLocalTracks,\n  runPreflight: preflighttest_1.runPreflight,\n  isSupported: isSupported,\n  version: version,\n  Logger: Logger,\n  LocalAudioTrack: LocalAudioTrack,\n  LocalVideoTrack: LocalVideoTrack,\n  LocalDataTrack: LocalDataTrack\n};","map":{"version":3,"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;AAOZ;AACA;AAGA,IAAMA,SAAS,GAAG;EAChBC,OAAO,EAAEC,OAAO,CAAC,WAAW,CAAC;EAC7BC,qBAAqB,EAAED,OAAO,CAAC,oBAAoB,CAAC,CAACE,KAAK;EAC1DC,qBAAqB,EAAEH,OAAO,CAAC,oBAAoB,CAAC,CAACI,KAAK;EAC1DC,WAAW,EAAEL,OAAO,CAAC,gBAAgB,CAAC,EAAE;EACxCM,OAAO,EAAEN,OAAO,CAAC,iBAAiB,CAAC,CAACM,OAAO;EAC3CC,MAAM,EAAEP,OAAO,CAAC,mBAAmB,CAAC;EACpCQ,eAAe,EAAER,OAAO,CAAC,mBAAmB,CAAC,CAACQ,eAAe;EAC7DC,cAAc,EAAET,OAAO,CAAC,mBAAmB,CAAC,CAACS,cAAc;EAC3DC,eAAe,EAAEV,OAAO,CAAC,mBAAmB,CAAC,CAACU;CAC/C;AAED,SAASX,OAAO,CAACY,KAAa,EAAEC,OAAwB;EACtD,IAAMC,eAAe;IACnBC,iBAAiB;EAAA,GACdF,OAAO,CACX;EACD,OAAOd,SAAS,CAACC,OAAO,CAACY,KAAK,EAAEE,eAAe,CAAC;AAClD;AAEA,SAASZ,qBAAqB,CAACW,OAA8D;EAC3F,IAAMC,eAAe;IACnBC,iBAAiB;EAAA,GACdF,OAAO,CACX;EACD,OAAOd,SAAS,CAACG,qBAAqB,CAACY,eAAe,CAAC;AACzD;AAEA,SAASV,qBAAqB,CAACS,OAAiC;EAC9D,IAAMC,eAAe;IACnBC,iBAAiB;EAAA,GACdF,OAAO,CACX;EACD,OAAOd,SAAS,CAACK,qBAAqB,CAACU,eAAe,CAAC;AACzD;AAEA;;;;;;;;;;;;;;;AAgBA,IAAMR,WAAW,GAAYP,SAAS,CAACO,WAAW;AAClD,IAAMC,OAAO,GAAYR,SAAS,CAACQ,OAAO;AAC1C,IAAMC,MAAM,GAAmBT,SAAS,CAACS,MAAM;AAC/C,IAAMC,eAAe,GAAGV,SAAS,CAACU,eAAe;AACjD,IAAME,eAAe,GAAGZ,SAAS,CAACY,eAAe;AACjD,IAAMD,cAAc,GAAGX,SAAS,CAACW,cAAc;AAE/CM,MAAM,CAACC,OAAO,GAAG;EACfjB,OAAO;EACPE,qBAAqB;EACrBE,qBAAqB;EACrBW,iBAAiB;EACjBG,YAAY;EACZZ,WAAW;EACXC,OAAO;EACPC,MAAM;EACNC,eAAe;EACfE,eAAe;EACfD,cAAc;CACf","names":["internals","connect","require","createLocalAudioTrack","audio","createLocalVideoTrack","video","isSupported","version","Logger","LocalAudioTrack","LocalDataTrack","LocalVideoTrack","token","options","internalOptions","createLocalTracks","module","exports","runPreflight"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/index.ts"],"sourcesContent":["'use strict';\n\nimport type { ConnectOptions, CreateLocalTrackOptions, CreateLocalAudioTrackOptions } from '../tsdef/types';\nimport type { LocalAudioTrack as LocalAudioTrackType } from '../tsdef/LocalAudioTrack';\nimport type { LocalVideoTrack as LocalVideoTrackType } from '../tsdef/LocalVideoTrack';\nimport type { Log } from '../tsdef/loglevel';\nimport type { Room } from '../tsdef/Room';\nimport { createLocalTracks } from './createlocaltracks';\nimport { runPreflight } from './preflight/preflighttest';\n\n\nconst internals = {\n  connect: require('./connect'),\n  createLocalAudioTrack: require('./createlocaltrack').audio,\n  createLocalVideoTrack: require('./createlocaltrack').video,\n  isSupported: require('./util/support')(),\n  version: require('../package.json').version,\n  Logger: require('./vendor/loglevel'),\n  LocalAudioTrack: require('./media/track/es5').LocalAudioTrack,\n  LocalDataTrack: require('./media/track/es5').LocalDataTrack,\n  LocalVideoTrack: require('./media/track/es5').LocalVideoTrack\n};\n\nfunction connect(token: string, options?: ConnectOptions): Promise<Room> {\n  const internalOptions = {\n    createLocalTracks,\n    ...options\n  };\n  return internals.connect(token, internalOptions);\n}\n\nfunction createLocalAudioTrack(options?: CreateLocalTrackOptions|CreateLocalAudioTrackOptions): Promise<LocalAudioTrackType> {\n  const internalOptions = {\n    createLocalTracks,\n    ...options\n  };\n  return internals.createLocalAudioTrack(internalOptions);\n}\n\nfunction createLocalVideoTrack(options?: CreateLocalTrackOptions): Promise<LocalVideoTrackType> {\n  const internalOptions = {\n    createLocalTracks,\n    ...options\n  };\n  return internals.createLocalVideoTrack(internalOptions);\n}\n\n/**\n * @module twilio-video\n * @property {boolean} isSupported - true if the current browser is officially\n *   supported by twilio-video.js; In this context, \"supported\" means that\n *   twilio-video.js has been extensively tested with this browser; This\n *   <a href=\"https://www.twilio.com/docs/video/javascript#supported-browsers\" target=\"_blank\">table</a>\n *   specifies the list of officially supported browsers.\n *\n * @property {object} Logger - The <a href=\"https://www.npmjs.com/package/loglevel\" target=\"_blank\">loglevel</a>\n *    module used by the SDK. Use this object to access the internal loggers and perform actions as defined by the\n *   <a href=\"https://www.npmjs.com/package/loglevel\" target=\"_blank\">loglevel</a> APIs.\n *   See [connect](#.connect) for examples.\n *\n * @property {string} version - current version of twilio-video.js.\n */\n\nconst isSupported: boolean = internals.isSupported;\nconst version: boolean = internals.version;\nconst Logger: Log.RootLogger = internals.Logger;\nconst LocalAudioTrack = internals.LocalAudioTrack;\nconst LocalVideoTrack = internals.LocalVideoTrack;\nconst LocalDataTrack = internals.LocalDataTrack;\n\nmodule.exports = {\n  connect,\n  createLocalAudioTrack,\n  createLocalVideoTrack,\n  createLocalTracks,\n  runPreflight,\n  isSupported,\n  version,\n  Logger,\n  LocalAudioTrack,\n  LocalVideoTrack,\n  LocalDataTrack,\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}