{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar TrackTransceiver = require('../../transceiver');\n/**\n * A {@link MediaTrackTransceiver} represents either one or more local\n * RTCRtpSenders, or a single RTCRtpReceiver.\n * @extends TrackTransceiver\n * @property {MediaStreamTrack} track\n */\nvar MediaTrackTransceiver = /** @class */function (_super) {\n  __extends(MediaTrackTransceiver, _super);\n  /**\n   * Construct a {@link MediaTrackTransceiver}.\n   * @param {Track.ID} id - The MediaStreamTrack ID signaled through RSP/SDP\n   * @param {MediaStreamTrack} mediaStreamTrack\n   */\n  function MediaTrackTransceiver(id, mediaStreamTrack) {\n    var _this = _super.call(this, id, mediaStreamTrack.kind) || this;\n    Object.defineProperties(_this, {\n      _track: {\n        value: mediaStreamTrack,\n        writable: true\n      },\n      enabled: {\n        enumerable: true,\n        get: function () {\n          return this._track.enabled;\n        }\n      },\n      readyState: {\n        enumerable: true,\n        get: function () {\n          return this._track.readyState;\n        }\n      },\n      track: {\n        enumerable: true,\n        get: function () {\n          return this._track;\n        }\n      }\n    });\n    return _this;\n  }\n  MediaTrackTransceiver.prototype.stop = function () {\n    this.track.stop();\n    _super.prototype.stop.call(this);\n  };\n  return MediaTrackTransceiver;\n}(TrackTransceiver);\nmodule.exports = MediaTrackTransceiver;","map":{"version":3,"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;AAEZ,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAErD;;;;;;AAMA;EAAoCC;EAClC;;;;;EAKA,+BAAYC,EAAE,EAAEC,gBAAgB;IAAhC,YACEC,kBAAMF,EAAE,EAAEC,gBAAgB,CAACE,IAAI,CAAC;IAChCC,MAAM,CAACC,gBAAgB,CAACC,KAAI,EAAE;MAC5BC,MAAM,EAAE;QACNC,KAAK,EAAEP,gBAAgB;QACvBQ,QAAQ,EAAE;OACX;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,GAAG;UACD,OAAO,IAAI,CAACL,MAAM,CAACG,OAAO;QAC5B;OACD;MACDG,UAAU,EAAE;QACVF,UAAU,EAAE,IAAI;QAChBC,GAAG;UACD,OAAO,IAAI,CAACL,MAAM,CAACM,UAAU;QAC/B;OACD;MACDC,KAAK,EAAE;QACLH,UAAU,EAAE,IAAI;QAChBC,GAAG;UACD,OAAO,IAAI,CAACL,MAAM;QACpB;;KAEH,CAAC;;EACJ;EAEAQ,oCAAI,GAAJ;IACE,IAAI,CAACD,KAAK,CAACE,IAAI,EAAE;IACjBd,iBAAMc,IAAI,WAAE;EACd,CAAC;EACH,4BAAC;AAAD,CAAC,CAtCmCnB,gBAAgB;AAwCpDoB,MAAM,CAACC,OAAO,GAAGH,qBAAqB","names":["TrackTransceiver","require","__extends","id","mediaStreamTrack","_super","kind","Object","defineProperties","_this","_track","value","writable","enabled","enumerable","get","readyState","track","MediaTrackTransceiver","stop","module","exports"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/media/track/transceiver.js"],"sourcesContent":["'use strict';\n\nconst TrackTransceiver = require('../../transceiver');\n\n/**\n * A {@link MediaTrackTransceiver} represents either one or more local\n * RTCRtpSenders, or a single RTCRtpReceiver.\n * @extends TrackTransceiver\n * @property {MediaStreamTrack} track\n */\nclass MediaTrackTransceiver extends TrackTransceiver {\n  /**\n   * Construct a {@link MediaTrackTransceiver}.\n   * @param {Track.ID} id - The MediaStreamTrack ID signaled through RSP/SDP\n   * @param {MediaStreamTrack} mediaStreamTrack\n   */\n  constructor(id, mediaStreamTrack) {\n    super(id, mediaStreamTrack.kind);\n    Object.defineProperties(this, {\n      _track: {\n        value: mediaStreamTrack,\n        writable: true\n      },\n      enabled: {\n        enumerable: true,\n        get() {\n          return this._track.enabled;\n        }\n      },\n      readyState: {\n        enumerable: true,\n        get() {\n          return this._track.readyState;\n        }\n      },\n      track: {\n        enumerable: true,\n        get() {\n          return this._track;\n        }\n      }\n    });\n  }\n\n  stop() {\n    this.track.stop();\n    super.stop();\n  }\n}\n\nmodule.exports = MediaTrackTransceiver;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}