{"ast":null,"code":"/**\n * Expose `Backoff`.\n */\nvar Backoff = /** @class */function () {\n  /**\n   * Construct a {@link Backoff}.\n   * @param {object} options\n   * @property {number} min - Initial timeout in milliseconds [100]\n   * @property {number} max - Max timeout [10000]\n   * @property {boolean} jitter - Apply jitter [0]\n   * @property {number} factor - Multiplication factor for Backoff operation [2]\n   */\n  function Backoff(options) {\n    Object.defineProperties(this, {\n      _min: {\n        value: options.min || 100\n      },\n      _max: {\n        value: options.max || 10000\n      },\n      _jitter: {\n        value: options.jitter > 0 && options.jitter <= 1 ? options.jitter : 0\n      },\n      _factor: {\n        value: options.factor || 2\n      },\n      _attempts: {\n        value: 0,\n        writable: true\n      },\n      _duration: {\n        enumerable: false,\n        get: function () {\n          var ms = this._min * Math.pow(this._factor, this._attempts);\n          if (this._jitter) {\n            var rand = Math.random();\n            var deviation = Math.floor(rand * this._jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) === 0 ? ms - deviation : ms + deviation;\n          }\n          return Math.min(ms, this._max) | 0;\n        }\n      },\n      _timeoutID: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n  /**\n  * Start the backoff operation.\n  * @param {function} fn - Function to call\n  * @return {void}\n  * @api public\n  */\n  Backoff.prototype.backoff = function (fn) {\n    var _this = this;\n    var duration = this._duration;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n    this._timeoutID = setTimeout(function () {\n      _this._attempts++;\n      fn();\n    }, duration);\n  };\n  /**\n  * Reset the number of attempts and clear the timer.\n  *\n  * @return {void}\n  * @api public\n  */\n  Backoff.prototype.reset = function () {\n    this._attempts = 0;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  };\n  return Backoff;\n}();\nmodule.exports = Backoff;","map":{"version":3,"mappings":"AACA;;;AAIA;EACE;;;;;;;;EAQA,iBAAYA,OAAO;IACjBC,MAAM,CAACC,gBAAgB,CAAC,IAAI,EAAE;MAC5BC,IAAI,EAAE;QACJC,KAAK,EAAEJ,OAAO,CAACK,GAAG,IAAI;OACvB;MACDC,IAAI,EAAE;QACJF,KAAK,EAAEJ,OAAO,CAACO,GAAG,IAAI;OACvB;MACDC,OAAO,EAAE;QACPJ,KAAK,EAAEJ,OAAO,CAACS,MAAM,GAAG,CAAC,IAAIT,OAAO,CAACS,MAAM,IAAI,CAAC,GAAGT,OAAO,CAACS,MAAM,GAAG;OACrE;MACDC,OAAO,EAAE;QACPN,KAAK,EAAEJ,OAAO,CAACW,MAAM,IAAI;OAC1B;MACDC,SAAS,EAAE;QACTR,KAAK,EAAE,CAAC;QACRS,QAAQ,EAAE;OACX;MACDC,SAAS,EAAE;QACTC,UAAU,EAAE,KAAK;QACjBC,GAAG;UACD,IAAIC,EAAE,GAAG,IAAI,CAACd,IAAI,GAAGe,IAAI,CAACC,GAAG,CAAC,IAAI,CAACT,OAAO,EAAE,IAAI,CAACE,SAAS,CAAC;UAC3D,IAAI,IAAI,CAACJ,OAAO,EAAE;YAChB,IAAMY,IAAI,GAAIF,IAAI,CAACG,MAAM,EAAE;YAC3B,IAAMC,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAACH,IAAI,GAAG,IAAI,CAACZ,OAAO,GAAGS,EAAE,CAAC;YACtDA,EAAE,GAAG,CAACC,IAAI,CAACK,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAIH,EAAE,GAAGK,SAAS,GAAGL,EAAE,GAAGK,SAAS;;UAE3E,OAAOJ,IAAI,CAACb,GAAG,CAACY,EAAE,EAAE,IAAI,CAACX,IAAI,CAAC,GAAG,CAAC;QACpC;OACD;MACDkB,UAAU,EAAE;QACVpB,KAAK,EAAE,IAAI;QACXS,QAAQ,EAAE;;KAEb,CAAC;EACJ;EAEA;;;;;;EAMAY,yBAAO,GAAP,UAAQC,EAAE;IAAV;IACE,IAAIC,QAAQ,GAAG,IAAI,CAACb,SAAS;IAC7B,IAAI,IAAI,CAACU,UAAU,EAAE;MACnBI,YAAY,CAAC,IAAI,CAACJ,UAAU,CAAC;MAC7B,IAAI,CAACA,UAAU,GAAG,IAAI;;IAExB,IAAI,CAACA,UAAU,GAAGK,UAAU,CAAC;MAC3BC,KAAI,CAAClB,SAAS,EAAE;MAChBc,EAAE,EAAE;IACN,CAAC,EAAEC,QAAQ,CAAC;EACd,CAAC;EAED;;;;;;EAMAF,uBAAK,GAAL;IACE,IAAI,CAACb,SAAS,GAAG,CAAC;IAClB,IAAI,IAAI,CAACY,UAAU,EAAE;MACnBI,YAAY,CAAC,IAAI,CAACJ,UAAU,CAAC;MAC7B,IAAI,CAACA,UAAU,GAAG,IAAI;;EAE1B,CAAC;EACH,cAAC;AAAD,CAAC,EA7ED;AA+EAO,MAAM,CAACC,OAAO,GAAGP,OAAO","names":["options","Object","defineProperties","_min","value","min","_max","max","_jitter","jitter","_factor","factor","_attempts","writable","_duration","enumerable","get","ms","Math","pow","rand","random","deviation","floor","_timeoutID","Backoff","fn","duration","clearTimeout","setTimeout","_this","module","exports"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/util/backoff.js"],"sourcesContent":["\n/**\n * Expose `Backoff`.\n */\n\nclass Backoff {\n  /**\n   * Construct a {@link Backoff}.\n   * @param {object} options\n   * @property {number} min - Initial timeout in milliseconds [100]\n   * @property {number} max - Max timeout [10000]\n   * @property {boolean} jitter - Apply jitter [0]\n   * @property {number} factor - Multiplication factor for Backoff operation [2]\n   */\n  constructor(options) {\n    Object.defineProperties(this, {\n      _min: {\n        value: options.min || 100\n      },\n      _max: {\n        value: options.max || 10000\n      },\n      _jitter: {\n        value: options.jitter > 0 && options.jitter <= 1 ? options.jitter : 0\n      },\n      _factor: {\n        value: options.factor || 2\n      },\n      _attempts: {\n        value: 0,\n        writable: true\n      },\n      _duration: {\n        enumerable: false,\n        get() {\n          let ms = this._min * Math.pow(this._factor, this._attempts);\n          if (this._jitter) {\n            const rand =  Math.random();\n            const deviation = Math.floor(rand * this._jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) === 0  ? ms - deviation : ms + deviation;\n          }\n          return Math.min(ms, this._max) | 0;\n        }\n      },\n      _timeoutID: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n\n  /**\n  * Start the backoff operation.\n  * @param {function} fn - Function to call\n  * @return {void}\n  * @api public\n  */\n  backoff(fn) {\n    let duration = this._duration;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n    this._timeoutID = setTimeout(() => {\n      this._attempts++;\n      fn();\n    }, duration);\n  }\n\n  /**\n  * Reset the number of attempts and clear the timer.\n  *\n  * @return {void}\n  * @api public\n  */\n  reset() {\n    this._attempts = 0;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n\nmodule.exports = Backoff;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}