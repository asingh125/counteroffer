{"ast":null,"code":"var _jsxFileName = \"/Users/aarushisingh/Projects/counteroffer/client/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nvar fs = require('fs');\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar userData = require(\"../db.json\");\nconst LoginPage = props => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayAlert, setDisplayAlert] = useState(false);\n  const onClick = async () => {\n    // Log in API\n    //   const data = await axios.post('http://10.150.243.218:8000/api/token', JSON.stringify({\n    //     username: username,\n    //     password: password\n    //   }), {headers: {authorization: \"http://10.150.243.218:8000\"}}).then(res => {\n    //   console.log(res)\n    //   return (\n    //     res.data\n    //   )\n    // }).then((result) => {\n    const success = true; //hard-coded in for now\n\n    // If response is 'username already exists': \n    if (!success) {\n      setDisplayAlert(true);\n    }\n\n    // Else, sign up correctly and redirect to homepage\n    else {\n      // Log in API request\n      props.setUN(username);\n      userData[\"USER\"] = username;\n      fs.writeFile('myjsonfile.json', JSON.stringify(userData), 'utf8', callback);\n      const jsonified = navigate('/');\n    }\n\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"auto\",\n      width: \"50%\",\n      padding: \"10%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        padding: \"10%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n              label: \"Username\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"username\",\n                placeholder: \"Username\",\n                value: username,\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n              label: \"Password\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: onClick,\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), displayAlert ? /*#__PURE__*/_jsxDEV(Alert, {\n      dismissible: true,\n      variant: \"danger\",\n      onClose: () => setDisplayAlert(false),\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 99\n      }, this), \": That username/password combination does not exist.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"KkvCaDi1pXGChXkiULhBsSzHboc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useNavigate","axios","fs","require","Card","Button","Form","FloatingLabel","Alert","userData","LoginPage","props","navigate","username","setUsername","password","setPassword","displayAlert","setDisplayAlert","onClick","success","setUN","writeFile","JSON","stringify","callback","jsonified","margin","width","padding","e","target","value"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/src/components/LoginPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\"\nvar fs = require('fs');\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Alert from 'react-bootstrap/Alert';\nvar userData = require(\"../db.json\")\n\n\nconst LoginPage = (props) => {\n  const navigate = useNavigate()\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [displayAlert, setDisplayAlert] = useState(false)\n\n  const onClick = async () => {\n    // Log in API\n  //   const data = await axios.post('http://10.150.243.218:8000/api/token', JSON.stringify({\n  //     username: username,\n  //     password: password\n  //   }), {headers: {authorization: \"http://10.150.243.218:8000\"}}).then(res => {\n  //   console.log(res)\n  //   return (\n  //     res.data\n  //   )\n  // }).then((result) => {\n    const success = true //hard-coded in for now\n\n    // If response is 'username already exists': \n    if (!success) {\n      setDisplayAlert(true)\n    }\n\n    // Else, sign up correctly and redirect to homepage\n    else {\n      // Log in API request\n      props.setUN(username)\n      userData[\"USER\"] = username\n      fs.writeFile('myjsonfile.json', JSON.stringify(userData), 'utf8', callback);\n      const jsonified = \n      navigate('/')\n    }\n\n  // })\n}\n\n\n  return (\n    <div style={{margin:\"auto\", width:\"50%\", padding:\"10%\"}}>\n      <Card style={{padding:\"10%\"}}>\n\n        <Card.Title><h2>Log In</h2></Card.Title>\n\n        <Card.Body>\n          <Form>\n            <Form.Group>\n              <FloatingLabel label=\"Username\">\n              <Form.Control type=\"username\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)}/>\n              </FloatingLabel>\n              {/* <Form.Label> <h6>Username</h6></Form.Label> */}\n            </Form.Group>\n\n            <br/>\n\n            <Form.Group>\n            <FloatingLabel label=\"Password\">\n              <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\n            </FloatingLabel>\n              {/* <Form.Label> <h6>Password</h6> </Form.Label> */}\n            </Form.Group>\n\n            <br/>\n\n            <Button variant=\"primary\" onClick={onClick}>\n              Log in\n            </Button>\n          </Form>\n          \n        </Card.Body>\n      </Card>\n\n      <br/>\n      {\n        displayAlert ? <Alert dismissible variant=\"danger\" onClose={() => setDisplayAlert(false)}><b>ERROR</b>: That username/password combination does not exist.</Alert> : <></>\n      }\n\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}