{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nvar _a = require('../../util/constants'),\n  E = _a.typeErrors,\n  trackPriority = _a.trackPriority;\nvar isIOS = require('../../util/browserdetection').isIOS;\nvar documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\nfunction mixinRemoteMediaTrack(AudioOrVideoTrack) {\n  /**\n   * A {@link RemoteMediaTrack} represents a {@link MediaTrack} published to a\n   * {@link Room} by a {@link RemoteParticipant}.\n   * @property {boolean} isEnabled - Whether the {@link RemoteMediaTrack} is enabled\n   * @property {boolean} isSwitchedOff - Whether the {@link RemoteMediaTrack} is switched off\n   * @property {Track.SID} sid - The SID assigned to the {@link RemoteMediaTrack}\n   * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteMediaTrack}\n   * @emits RemoteMediaTrack#disabled\n   * @emits RemoteMediaTrack#enabled\n   * @emits RemoteMediaTrack#switchedOff\n   * @emits RemoteMediaTrack#switchedOn\n   */\n  return (/** @class */function (_super) {\n      __extends(RemoteMediaTrack, _super);\n      /**\n       * Construct a {@link RemoteMediaTrack}.\n       * @param {Track.SID} sid\n       * @param {MediaTrackReceiver} mediaTrackReceiver\n       * @param {boolean} isEnabled\n        @param {boolean} isSwitchedOff\n       * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n       *  {@link Track.Priority} of the {@link RemoteMediaTrack}\n       * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n       * @param {{log: Log, name: ?string}} options\n       */\n      function RemoteMediaTrack(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n        var _this = this;\n        options = Object.assign({\n          // NOTE(mpatwardhan): WebKit bug: 212780 sometimes causes the audio/video elements to stay paused when safari\n          // regains foreground. To workaround it, when safari gains foreground - we will play any elements that were\n          // playing before safari lost foreground.\n          workaroundWebKitBug212780: isIOS() && typeof document === 'object' && typeof document.addEventListener === 'function' && typeof document.visibilityState === 'string'\n        }, options);\n        _this = _super.call(this, mediaTrackReceiver, options) || this;\n        Object.defineProperties(_this, {\n          _isEnabled: {\n            value: isEnabled,\n            writable: true\n          },\n          _isSwitchedOff: {\n            value: isSwitchedOff,\n            writable: true\n          },\n          _priority: {\n            value: null,\n            writable: true\n          },\n          _setPriority: {\n            value: setPriority\n          },\n          _setRenderHint: {\n            value: function (renderHint) {\n              _this._log.debug('updating render hint:', renderHint);\n              setRenderHint(renderHint);\n            }\n          },\n          isEnabled: {\n            enumerable: true,\n            get: function () {\n              return this._isEnabled;\n            }\n          },\n          isSwitchedOff: {\n            enumerable: true,\n            get: function () {\n              return this._isSwitchedOff;\n            }\n          },\n          priority: {\n            enumerable: true,\n            get: function () {\n              return this._priority;\n            }\n          },\n          sid: {\n            enumerable: true,\n            value: sid\n          },\n          _workaroundWebKitBug212780: {\n            value: options.workaroundWebKitBug212780\n          },\n          _workaroundWebKitBug212780Cleanup: {\n            value: null,\n            writable: true\n          }\n        });\n        return _this;\n      }\n      /**\n       * Update the subscribe {@link Track.Priority} of the {@link RemoteMediaTrack}.\n       * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n       *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n       *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n       * @returns {this}\n       * @throws {RangeError}\n       */\n      RemoteMediaTrack.prototype.setPriority = function (priority) {\n        var priorityValues = __spreadArray([null], __read(Object.values(trackPriority)));\n        if (!priorityValues.includes(priority)) {\n          // eslint-disable-next-line new-cap\n          throw E.INVALID_VALUE('priority', priorityValues);\n        }\n        if (this._priority !== priority) {\n          this._priority = priority;\n          this._setPriority(priority);\n        }\n        return this;\n      };\n      /**\n       * @private\n       * @param {boolean} isEnabled\n       */\n      RemoteMediaTrack.prototype._setEnabled = function (isEnabled) {\n        if (this._isEnabled !== isEnabled) {\n          this._isEnabled = isEnabled;\n          this.emit(this._isEnabled ? 'enabled' : 'disabled', this);\n        }\n      };\n      /**\n       * @private\n       * @param {boolean} isSwitchedOff\n       */\n      RemoteMediaTrack.prototype._setSwitchedOff = function (isSwitchedOff) {\n        if (this._isSwitchedOff !== isSwitchedOff) {\n          this._isSwitchedOff = isSwitchedOff;\n          this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n        }\n      };\n      RemoteMediaTrack.prototype.attach = function (el) {\n        var result = _super.prototype.attach.call(this, el);\n        if (this.mediaStreamTrack.enabled !== true) {\n          // NOTE(mpatwardhan): we disable mediaStreamTrack when there\n          // are no attachments to it (see notes below). Now that there\n          // are attachments re-enable the track.\n          this.mediaStreamTrack.enabled = true;\n          if (this.processedTrack) {\n            this.processedTrack.enabled = true;\n          }\n          // NOTE(csantos): since remote tracks disables/enables the mediaStreamTrack,\n          // captureFrames stops along with it. We need to start it again after re-enabling.\n          // See attach/detach methods in this class and in VideoTrack class.\n          if (this.processor) {\n            this._captureFrames();\n          }\n        }\n        if (this._workaroundWebKitBug212780) {\n          this._workaroundWebKitBug212780Cleanup = this._workaroundWebKitBug212780Cleanup || playIfPausedWhileInBackground(this);\n        }\n        return result;\n      };\n      RemoteMediaTrack.prototype.detach = function (el) {\n        var result = _super.prototype.detach.call(this, el);\n        if (this._attachments.size === 0) {\n          // NOTE(mpatwardhan): chrome continues playing webrtc audio\n          // track even after audio element is removed from the DOM.\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=749928\n          // to workaround: here disable the track when\n          // there are no elements attached to it.\n          this.mediaStreamTrack.enabled = false;\n          if (this.processedTrack) {\n            this.processedTrack.enabled = false;\n          }\n          if (this._workaroundWebKitBug212780Cleanup) {\n            // unhook visibility change\n            this._workaroundWebKitBug212780Cleanup();\n            this._workaroundWebKitBug212780Cleanup = null;\n          }\n        }\n        return result;\n      };\n      return RemoteMediaTrack;\n    }(AudioOrVideoTrack)\n  );\n}\nfunction playIfPausedWhileInBackground(remoteMediaTrack) {\n  var log = remoteMediaTrack._log,\n    kind = remoteMediaTrack.kind;\n  function onVisibilityChanged(isVisible) {\n    if (!isVisible) {\n      return;\n    }\n    remoteMediaTrack._attachments.forEach(function (el) {\n      var shim = remoteMediaTrack._elShims.get(el);\n      var isInadvertentlyPaused = el.paused && shim && !shim.pausedIntentionally();\n      if (isInadvertentlyPaused) {\n        log.info(\"Playing inadvertently paused <\" + kind + \"> element\");\n        log.debug('Element:', el);\n        log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        el.play().then(function () {\n          log.info(\"Successfully played inadvertently paused <\" + kind + \"> element\");\n          log.debug('Element:', el);\n          log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        }).catch(function (err) {\n          log.warn(\"Error while playing inadvertently paused <\" + kind + \"> element:\", {\n            err: err,\n            el: el,\n            remoteMediaTrack: remoteMediaTrack\n          });\n        });\n      }\n    });\n  }\n  // NOTE(mpatwardhan): listen for document visibility callback on phase 2.\n  // this ensures that any LocalMediaTrack's restart (which listen on phase 1) gets executed\n  // first. This order is important because we `play` tracks in the callback, and\n  // play can fail on safari if audio is not being captured.\n  documentVisibilityMonitor.onVisibilityChange(2, onVisibilityChanged);\n  return function () {\n    documentVisibilityMonitor.offVisibilityChange(2, onVisibilityChanged);\n  };\n}\n/**\n * A {@link RemoteMediaTrack} was disabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   disabled\n * @event RemoteMediaTrack#disabled\n */\n/**\n * A {@link RemoteMediaTrack} was enabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   enabled\n * @event RemoteMediaTrack#enabled\n */\n/**\n * A {@link RemoteMediaTrack} was switched off.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched off\n * @event RemoteMediaTrack#switchedOff\n */\n/**\n * A {@link RemoteMediaTrack} was switched on.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched on\n * @event RemoteMediaTrack#switchedOn\n */\n/**\n * A {@link ClientRenderHint} object specifies track dimensions and /enabled disable state.\n * This state will be used by the server(SFU) to determine bandwidth allocation for the track,\n * and turn it on or off as needed.\n * @typedef {object} ClientRenderHint\n * @property {boolean} [enabled] - track is enabled or disabled. defaults to disabled.\n * @property {VideoTrack.Dimensions} [renderDimensions] - Optional parameter to specify the desired\n *   render dimensions of {@link RemoteVideoTrack}s. This property must be specified if enabled=true\n */\nmodule.exports = mixinRemoteMediaTrack;","map":{"version":3,"mappings":"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","names":["require","E","trackPriority","documentVisibilityMonitor","mixinRemoteMediaTrack","AudioOrVideoTrack","__extends","sid","mediaTrackReceiver","isEnabled","isSwitchedOff","setPriority","setRenderHint","options","Object","assign","workaroundWebKitBug212780","isIOS","document","addEventListener","visibilityState","_this","defineProperties","_isEnabled","value","writable","_isSwitchedOff","_priority","_setPriority","_setRenderHint","_log","debug","renderHint","enumerable","get","priority","_workaroundWebKitBug212780","_workaroundWebKitBug212780Cleanup","RemoteMediaTrack","priorityValues","values","includes","INVALID_VALUE","emit","el","result","_super","attach","mediaStreamTrack","enabled","processedTrack","processor","_captureFrames","playIfPausedWhileInBackground","detach","_attachments","size","remoteMediaTrack","log","kind","onVisibilityChanged","isVisible","forEach","shim","_elShims","isInadvertentlyPaused","paused","pausedIntentionally","info","play","then","catch","warn","err","onVisibilityChange","offVisibilityChange","module","exports"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/media/track/remotemediatrack.js"],"sourcesContent":["'use strict';\n\nconst { typeErrors: E, trackPriority } = require('../../util/constants');\nconst { isIOS } = require('../../util/browserdetection');\nconst documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\n\nfunction mixinRemoteMediaTrack(AudioOrVideoTrack) {\n  /**\n   * A {@link RemoteMediaTrack} represents a {@link MediaTrack} published to a\n   * {@link Room} by a {@link RemoteParticipant}.\n   * @property {boolean} isEnabled - Whether the {@link RemoteMediaTrack} is enabled\n   * @property {boolean} isSwitchedOff - Whether the {@link RemoteMediaTrack} is switched off\n   * @property {Track.SID} sid - The SID assigned to the {@link RemoteMediaTrack}\n   * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteMediaTrack}\n   * @emits RemoteMediaTrack#disabled\n   * @emits RemoteMediaTrack#enabled\n   * @emits RemoteMediaTrack#switchedOff\n   * @emits RemoteMediaTrack#switchedOn\n   */\n  return class RemoteMediaTrack extends AudioOrVideoTrack {\n    /**\n     * Construct a {@link RemoteMediaTrack}.\n     * @param {Track.SID} sid\n     * @param {MediaTrackReceiver} mediaTrackReceiver\n     * @param {boolean} isEnabled\n      @param {boolean} isSwitchedOff\n     * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n     *  {@link Track.Priority} of the {@link RemoteMediaTrack}\n     * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n     * @param {{log: Log, name: ?string}} options\n     */\n    constructor(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n      options = Object.assign({\n        // NOTE(mpatwardhan): WebKit bug: 212780 sometimes causes the audio/video elements to stay paused when safari\n        // regains foreground. To workaround it, when safari gains foreground - we will play any elements that were\n        // playing before safari lost foreground.\n        workaroundWebKitBug212780: isIOS()\n          && typeof document === 'object'\n          && typeof document.addEventListener === 'function'\n          && typeof document.visibilityState === 'string'\n      }, options);\n\n      super(mediaTrackReceiver, options);\n\n      Object.defineProperties(this, {\n        _isEnabled: {\n          value: isEnabled,\n          writable: true\n        },\n        _isSwitchedOff: {\n          value: isSwitchedOff,\n          writable: true\n        },\n        _priority: {\n          value: null,\n          writable: true\n        },\n        _setPriority: {\n          value: setPriority\n        },\n        _setRenderHint: {\n          value: renderHint => {\n            this._log.debug('updating render hint:', renderHint);\n            setRenderHint(renderHint);\n          }\n        },\n        isEnabled: {\n          enumerable: true,\n          get() {\n            return this._isEnabled;\n          }\n        },\n        isSwitchedOff: {\n          enumerable: true,\n          get() {\n            return this._isSwitchedOff;\n          }\n        },\n        priority: {\n          enumerable: true,\n          get() {\n            return this._priority;\n          }\n        },\n        sid: {\n          enumerable: true,\n          value: sid\n        },\n        _workaroundWebKitBug212780: {\n          value: options.workaroundWebKitBug212780\n        },\n        _workaroundWebKitBug212780Cleanup: {\n          value: null,\n          writable: true\n        }\n      });\n    }\n\n    /**\n     * Update the subscribe {@link Track.Priority} of the {@link RemoteMediaTrack}.\n     * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n     *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n     *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n    setPriority(priority) {\n      const priorityValues = [null, ...Object.values(trackPriority)];\n      if (!priorityValues.includes(priority)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_VALUE('priority', priorityValues);\n      }\n      if (this._priority !== priority) {\n        this._priority = priority;\n        this._setPriority(priority);\n      }\n      return this;\n    }\n\n    /**\n     * @private\n     * @param {boolean} isEnabled\n     */\n    _setEnabled(isEnabled) {\n      if (this._isEnabled !== isEnabled) {\n        this._isEnabled = isEnabled;\n        this.emit(this._isEnabled ? 'enabled' : 'disabled', this);\n      }\n    }\n\n    /**\n     * @private\n     * @param {boolean} isSwitchedOff\n     */\n    _setSwitchedOff(isSwitchedOff) {\n      if (this._isSwitchedOff !== isSwitchedOff) {\n        this._isSwitchedOff = isSwitchedOff;\n        this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n      }\n    }\n\n    attach(el) {\n      const result = super.attach(el);\n      if (this.mediaStreamTrack.enabled !== true) {\n        // NOTE(mpatwardhan): we disable mediaStreamTrack when there\n        // are no attachments to it (see notes below). Now that there\n        // are attachments re-enable the track.\n        this.mediaStreamTrack.enabled = true;\n        if (this.processedTrack) {\n          this.processedTrack.enabled = true;\n        }\n\n        // NOTE(csantos): since remote tracks disables/enables the mediaStreamTrack,\n        // captureFrames stops along with it. We need to start it again after re-enabling.\n        // See attach/detach methods in this class and in VideoTrack class.\n        if (this.processor) {\n          this._captureFrames();\n        }\n      }\n      if (this._workaroundWebKitBug212780) {\n        this._workaroundWebKitBug212780Cleanup = this._workaroundWebKitBug212780Cleanup\n          || playIfPausedWhileInBackground(this);\n      }\n\n      return result;\n    }\n\n    detach(el) {\n      const result = super.detach(el);\n      if (this._attachments.size === 0) {\n        // NOTE(mpatwardhan): chrome continues playing webrtc audio\n        // track even after audio element is removed from the DOM.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=749928\n        // to workaround: here disable the track when\n        // there are no elements attached to it.\n        this.mediaStreamTrack.enabled = false;\n        if (this.processedTrack) {\n          this.processedTrack.enabled = false;\n        }\n\n        if (this._workaroundWebKitBug212780Cleanup) {\n          // unhook visibility change\n          this._workaroundWebKitBug212780Cleanup();\n          this._workaroundWebKitBug212780Cleanup = null;\n        }\n      }\n      return result;\n    }\n  };\n}\n\nfunction playIfPausedWhileInBackground(remoteMediaTrack) {\n  const { _log: log, kind } = remoteMediaTrack;\n\n  function onVisibilityChanged(isVisible) {\n    if (!isVisible) {\n      return;\n    }\n    remoteMediaTrack._attachments.forEach(el => {\n      const shim = remoteMediaTrack._elShims.get(el);\n      const isInadvertentlyPaused = el.paused && shim && !shim.pausedIntentionally();\n      if (isInadvertentlyPaused) {\n        log.info(`Playing inadvertently paused <${kind}> element`);\n        log.debug('Element:', el);\n        log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        el.play().then(() => {\n          log.info(`Successfully played inadvertently paused <${kind}> element`);\n          log.debug('Element:', el);\n          log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        }).catch(err => {\n          log.warn(`Error while playing inadvertently paused <${kind}> element:`, { err, el, remoteMediaTrack });\n        });\n      }\n    });\n  }\n\n  // NOTE(mpatwardhan): listen for document visibility callback on phase 2.\n  // this ensures that any LocalMediaTrack's restart (which listen on phase 1) gets executed\n  // first. This order is important because we `play` tracks in the callback, and\n  // play can fail on safari if audio is not being captured.\n  documentVisibilityMonitor.onVisibilityChange(2, onVisibilityChanged);\n  return () => {\n    documentVisibilityMonitor.offVisibilityChange(2, onVisibilityChanged);\n  };\n}\n\n/**\n * A {@link RemoteMediaTrack} was disabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   disabled\n * @event RemoteMediaTrack#disabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was enabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   enabled\n * @event RemoteMediaTrack#enabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched off.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched off\n * @event RemoteMediaTrack#switchedOff\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched on.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched on\n * @event RemoteMediaTrack#switchedOn\n */\n\n/**\n * A {@link ClientRenderHint} object specifies track dimensions and /enabled disable state.\n * This state will be used by the server(SFU) to determine bandwidth allocation for the track,\n * and turn it on or off as needed.\n * @typedef {object} ClientRenderHint\n * @property {boolean} [enabled] - track is enabled or disabled. defaults to disabled.\n * @property {VideoTrack.Dimensions} [renderDimensions] - Optional parameter to specify the desired\n *   render dimensions of {@link RemoteVideoTrack}s. This property must be specified if enabled=true\n */\n\nmodule.exports = mixinRemoteMediaTrack;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}