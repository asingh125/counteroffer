{"ast":null,"code":"'use strict';\n\n/**\n * A {@link Timeout} represents a resettable and clearable timeout.\n */\nvar Timeout = /** @class */function () {\n  /**\n   * Construct a {@link Timeout}.\n   * @param {function} fn - Function to call\n   * @param {number} delay - Delay in milliseconds\n   * @param {boolean} [autoStart=true] - If true, then start the {@link Timeout}.\n   */\n  function Timeout(fn, delay, autoStart) {\n    if (autoStart === void 0) {\n      autoStart = true;\n    }\n    Object.defineProperties(this, {\n      _delay: {\n        value: delay,\n        writable: true\n      },\n      _fn: {\n        value: fn\n      },\n      _timeout: {\n        value: null,\n        writable: true\n      }\n    });\n    if (autoStart) {\n      this.start();\n    }\n  }\n  Object.defineProperty(Timeout.prototype, \"delay\", {\n    /**\n     * The {@link Timeout} delay in milliseconds.\n     * @property {number}\n     */\n    get: function () {\n      return this._delay;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Timeout.prototype, \"isSet\", {\n    /**\n     * Whether the {@link Timeout} is set.\n     * @property {boolean}\n     */\n    get: function () {\n      return !!this._timeout;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Update the {@link Timeout} delay.\n   * @param {number} delay\n   * @returns {void}\n   */\n  Timeout.prototype.setDelay = function (delay) {\n    this._delay = delay;\n  };\n  /**\n   * Start the {@link Timeout}, if not already started.\n   * @returns {void}\n   */\n  Timeout.prototype.start = function () {\n    var _this = this;\n    if (!this.isSet) {\n      this._timeout = setTimeout(function () {\n        var fn = _this._fn;\n        _this.clear();\n        fn();\n      }, this._delay);\n    }\n  };\n  /**\n   * Clear the {@link Timeout}.\n   * @returns {void}\n   */\n  Timeout.prototype.clear = function () {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  };\n  /**\n   * Reset the {@link Timeout}.\n   * @returns {void}\n   */\n  Timeout.prototype.reset = function () {\n    this.clear();\n    this.start();\n  };\n  return Timeout;\n}();\nmodule.exports = Timeout;","map":{"version":3,"mappings":"AAAA,YAAY;;AAEZ;;;AAGA;EACE;;;;;;EAMA,iBAAYA,EAAE,EAAEC,KAAK,EAAEC,SAAgB;IAAhB;MAAAA,gBAAgB;IAAA;IACrCC,MAAM,CAACC,gBAAgB,CAAC,IAAI,EAAE;MAC5BC,MAAM,EAAE;QACNC,KAAK,EAAEL,KAAK;QACZM,QAAQ,EAAE;OACX;MACDC,GAAG,EAAE;QACHF,KAAK,EAAEN;OACR;MACDS,QAAQ,EAAE;QACRH,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAE;;KAEb,CAAC;IAEF,IAAIL,SAAS,EAAE;MACb,IAAI,CAACQ,KAAK,EAAE;;EAEhB;EAMAP,sBAAIQ,0BAAK;IAJT;;;;SAIA;MACE,OAAO,IAAI,CAACN,MAAM;IACpB,CAAC;;;;EAMDF,sBAAIQ,0BAAK;IAJT;;;;SAIA;MACE,OAAO,CAAC,CAAC,IAAI,CAACF,QAAQ;IACxB,CAAC;;;;EAED;;;;;EAKAE,0BAAQ,GAAR,UAASV,KAAK;IACZ,IAAI,CAACI,MAAM,GAAGJ,KAAK;EACrB,CAAC;EAED;;;;EAIAU,uBAAK,GAAL;IAAA;IACE,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;MACf,IAAI,CAACH,QAAQ,GAAGI,UAAU,CAAC;QACzB,IAAMb,EAAE,GAAGc,KAAI,CAACN,GAAG;QACnBM,KAAI,CAACC,KAAK,EAAE;QACZf,EAAE,EAAE;MACN,CAAC,EAAE,IAAI,CAACK,MAAM,CAAC;;EAEnB,CAAC;EAED;;;;EAIAM,uBAAK,GAAL;IACEK,YAAY,CAAC,IAAI,CAACP,QAAQ,CAAC;IAC3B,IAAI,CAACA,QAAQ,GAAG,IAAI;EACtB,CAAC;EAED;;;;EAIAE,uBAAK,GAAL;IACE,IAAI,CAACI,KAAK,EAAE;IACZ,IAAI,CAACL,KAAK,EAAE;EACd,CAAC;EACH,cAAC;AAAD,CAAC,EAnFD;AAqFAO,MAAM,CAACC,OAAO,GAAGP,OAAO","names":["fn","delay","autoStart","Object","defineProperties","_delay","value","writable","_fn","_timeout","start","Timeout","isSet","setTimeout","_this","clear","clearTimeout","module","exports"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/util/timeout.js"],"sourcesContent":["'use strict';\n\n/**\n * A {@link Timeout} represents a resettable and clearable timeout.\n */\nclass Timeout {\n  /**\n   * Construct a {@link Timeout}.\n   * @param {function} fn - Function to call\n   * @param {number} delay - Delay in milliseconds\n   * @param {boolean} [autoStart=true] - If true, then start the {@link Timeout}.\n   */\n  constructor(fn, delay, autoStart = true) {\n    Object.defineProperties(this, {\n      _delay: {\n        value: delay,\n        writable: true\n      },\n      _fn: {\n        value: fn\n      },\n      _timeout: {\n        value: null,\n        writable: true\n      }\n    });\n\n    if (autoStart) {\n      this.start();\n    }\n  }\n\n  /**\n   * The {@link Timeout} delay in milliseconds.\n   * @property {number}\n   */\n  get delay() {\n    return this._delay;\n  }\n\n  /**\n   * Whether the {@link Timeout} is set.\n   * @property {boolean}\n   */\n  get isSet() {\n    return !!this._timeout;\n  }\n\n  /**\n   * Update the {@link Timeout} delay.\n   * @param {number} delay\n   * @returns {void}\n   */\n  setDelay(delay) {\n    this._delay = delay;\n  }\n\n  /**\n   * Start the {@link Timeout}, if not already started.\n   * @returns {void}\n   */\n  start() {\n    if (!this.isSet) {\n      this._timeout = setTimeout(() => {\n        const fn = this._fn;\n        this.clear();\n        fn();\n      }, this._delay);\n    }\n  }\n\n  /**\n   * Clear the {@link Timeout}.\n   * @returns {void}\n   */\n  clear() {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  }\n\n  /**\n   * Reset the {@link Timeout}.\n   * @returns {void}\n   */\n  reset() {\n    this.clear();\n    this.start();\n  }\n}\n\nmodule.exports = Timeout;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}