{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar MediaSignaling = require('./mediasignaling');\n/**\n * @emits TrackSwitchOffSignalinging#updated\n */\nvar TrackSwitchOffSignaling = /** @class */function (_super) {\n  __extends(TrackSwitchOffSignaling, _super);\n  /**\n   * Construct a {@link TrackSwitchOffSignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   */\n  function TrackSwitchOffSignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'track_switch_off', options) || this;\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        switch (message.type) {\n          case 'track_switch_off':\n            _this._setTrackSwitchOffUpdates(message.off || [], message.on || []);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n    return _this;\n  }\n  /**\n   * @private\n   * @param {[Track.SID]} tracksSwitchedOff\n   * @param {[Track.SID]} tracksSwitchedOn\n   * @returns {void}\n   */\n  TrackSwitchOffSignaling.prototype._setTrackSwitchOffUpdates = function (tracksSwitchedOff, tracksSwitchedOn) {\n    this.emit('updated', tracksSwitchedOff, tracksSwitchedOn);\n  };\n  return TrackSwitchOffSignaling;\n}(MediaSignaling);\n/**\n * @event TrackSwitchOffSignaling#updated\n */\nmodule.exports = TrackSwitchOffSignaling;","map":{"version":3,"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;AAEZ,IAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAElD;;;AAGA;EAAsCC;EACpC;;;;EAIA,iCAAYC,WAAW,EAAEC,OAAO;IAAhC,YACEC,kBAAMF,WAAW,EAAE,kBAAkB,EAAEC,OAAO,CAAC;IAC/CE,KAAI,CAACC,EAAE,CAAC,OAAO,EAAE,mBAAS;MACxBC,SAAS,CAACD,EAAE,CAAC,SAAS,EAAE,iBAAO;QAC7B,QAAQE,OAAO,CAACC,IAAI;UAClB,KAAK,kBAAkB;YACrBJ,KAAI,CAACK,yBAAyB,CAACF,OAAO,CAACG,GAAG,IAAI,EAAE,EAAEH,OAAO,CAACF,EAAE,IAAI,EAAE,CAAC;YACnE;UACF;YACE;QAAM;MAEZ,CAAC,CAAC;IACJ,CAAC,CAAC;;EACJ;EAEA;;;;;;EAMAM,2DAAyB,GAAzB,UAA0BC,iBAAiB,EAAEC,gBAAgB;IAC3D,IAAI,CAACC,IAAI,CAAC,SAAS,EAAEF,iBAAiB,EAAEC,gBAAgB,CAAC;EAC3D,CAAC;EACH,8BAAC;AAAD,CAAC,CA7BqCf,cAAc;AA+BpD;;;AAIAiB,MAAM,CAACC,OAAO,GAAGL,uBAAuB","names":["MediaSignaling","require","__extends","getReceiver","options","_super","_this","on","transport","message","type","_setTrackSwitchOffUpdates","off","TrackSwitchOffSignaling","tracksSwitchedOff","tracksSwitchedOn","emit","module","exports"],"sources":["/Users/aarushisingh/Projects/counteroffer/client/node_modules/twilio-video/lib/signaling/v2/trackswitchoffsignaling.js"],"sourcesContent":["'use strict';\n\nconst MediaSignaling = require('./mediasignaling');\n\n/**\n * @emits TrackSwitchOffSignalinging#updated\n */\nclass TrackSwitchOffSignaling extends MediaSignaling {\n  /**\n   * Construct a {@link TrackSwitchOffSignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   */\n  constructor(getReceiver, options) {\n    super(getReceiver, 'track_switch_off', options);\n    this.on('ready', transport => {\n      transport.on('message', message => {\n        switch (message.type) {\n          case 'track_switch_off':\n            this._setTrackSwitchOffUpdates(message.off || [], message.on || []);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  /**\n   * @private\n   * @param {[Track.SID]} tracksSwitchedOff\n   * @param {[Track.SID]} tracksSwitchedOn\n   * @returns {void}\n   */\n  _setTrackSwitchOffUpdates(tracksSwitchedOff, tracksSwitchedOn) {\n    this.emit('updated', tracksSwitchedOff, tracksSwitchedOn);\n  }\n}\n\n/**\n * @event TrackSwitchOffSignaling#updated\n */\n\nmodule.exports = TrackSwitchOffSignaling;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}